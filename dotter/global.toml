[helpers]
concat = "dotter/helpers/concat.rhai"

[aconfmgr.files]
"aconfmgr/10-arch.sh" = "$XDG_CONFIG_HOME/aconfmgr/10-arch.sh"
"aconfmgr/files/boot/loader/entries/arch-fallback.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/boot/loader/entries/arch-fallback.conf", if = "dotter.packages.linux" }
"aconfmgr/files/boot/loader/entries/arch-lts-fallback.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/boot/loader/entries/arch-lts-fallback.conf", if = "linux.lts" }
"aconfmgr/files/boot/loader/entries/arch-lts.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/boot/loader/entries/arch-lts.conf", if = "linux.lts" }
"aconfmgr/files/boot/loader/entries/arch-surface-fallback.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/boot/loader/entries/arch-surface-fallback.conf", if = "linux.surface" }
"aconfmgr/files/boot/loader/entries/arch-surface.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/boot/loader/entries/arch-surface.conf", if = "linux.surface" }
"aconfmgr/files/boot/loader/entries/arch.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/boot/loader/entries/arch.conf", if = "dotter.packages.linux" }
"aconfmgr/files/boot/loader/loader.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/boot/loader/loader.conf", if = "dotter.packages.linux" }
"aconfmgr/files/etc/hostname" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/hostname" }
"aconfmgr/files/etc/bluetooth/input.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/bluetooth/input.conf", if = "linux.bluetooth" }
"aconfmgr/files/etc/bluetooth/main.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/bluetooth/main.conf", if = "linux.bluetooth" }
"aconfmgr/files/etc/bluetooth/network.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/bluetooth/network.conf", if = "linux.bluetooth" }
"aconfmgr/files/etc/locale.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/locale.conf" }
"aconfmgr/files/etc/locale.gen" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/locale.gen" }
"aconfmgr/files/etc/mkinitcpio.d/linux-lts.preset" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/mkinitcpio.d/linux-lts.preset", if = "linux.lts" }
"aconfmgr/files/etc/mkinitcpio.d/linux-surface.preset" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/mkinitcpio.d/linux-surface.preset", if = "linux.surface" }
"aconfmgr/files/etc/mkinitcpio.d/linux.preset" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/mkinitcpio.d/linux.preset", if = "dotter.packages.linux" }
"aconfmgr/files/etc/pacman.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/pacman.conf", if = "dotter.packages.pacman" }
"aconfmgr/files/etc/paru.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/paru.conf", if = "dotter.packages.paru" }
"aconfmgr/files/etc/sddm.conf.d/kde_settings.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/sddm.conf.d/kde_settings.conf", if = "dotter.packages.kde" }
"aconfmgr/files/etc/ssh/sshd_config" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/ssh/sshd_config", if = "dotter.packages.sshd" }
"aconfmgr/files/etc/sudoers" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/sudoers" }
"aconfmgr/files/etc/systemd/network/10-ethernet.network" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/systemd/network/10-ethernet.network", if = "systemd-networkd.ethernet" }
"aconfmgr/files/etc/systemd/network/20-wlan.network" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/systemd/network/20-wlan.network", if = "systemd-networkd.wlan" }
"aconfmgr/files/etc/systemd/network/30-wwan.network" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/systemd/network/30-wwan.network", if = "systemd-networkd.wwan" }
"aconfmgr/files/etc/udev/hwdb.d/10-keyboard.hwdb" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/udev/hwdb.d/10-keyboard.hwdb", if = "dotter.packages.linux" }
"aconfmgr/files/etc/udev/rules.d/99-disable-surface-touch.rules" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/udev/rules.d/99-disable-surface-touch.rules", if = "linux.surface" }
"aconfmgr/files/etc/wsl.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/wsl.conf", if = "dotter.packages.wsl" }
"aconfmgr/files/etc/xdg/reflector/reflector.conf" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/etc/xdg/reflector/reflector.conf" }
"aconfmgr/files/usr/lib/systemd/system/systemd-networkd-wait-online.service" = { type = "template", target = "$XDG_CONFIG_HOME/aconfmgr/files/usr/lib/systemd/system/systemd-networkd-wait-online.service", if = "dotter.packages.systemd-networkd" }

[alacritty.files]
"alacritty/alacritty.toml" = "$XDG_CONFIG_HOME/alacritty.toml"

[amd]

[bash]
depends = ["shell"]

[bash.files]
"bash/bash_profile" = "~/.bash_profile"
"bash/bashrc" = "~/.bashrc"

[bash.variables.bash]
HISTCONTROL = "ignoreboth"
HISTFILE = "$XDG_DATA_HOME/bash_history"
HISTFILESIZE = "2000"
HISTSIZE = "1000"

[bat]

[delta]
depends = ["git"]

[delta.variables.delta]
DELTA_PAGER = "less -S"

[dotnet.variables.dotnet]
DOTNET_CLI_TELEMETRY_OPTOUT = 1

[firefox.files]
"firefox/local/bin/firefox" = "~/.local/bin/firefox"
"firefox/local/share/applications/firefox.desktop" = "$XDG_DATA_HOME/applications/firefox.desktop"

[fish]
depends = ["shell"]

[fish.files]
"fish/config.fish" = "$XDG_CONFIG_HOME/fish/config.fish"
"fish/fish_variables" = "$XDG_CONFIG_HOME/fish/fish_variables"
"fish/interactive.fish" = "$XDG_CONFIG_HOME/fish/interactive.fish"
"fish/login.fish" = "$XDG_CONFIG_HOME/fish/login.fish"
"fish/functions/dot.fish" = { type = "symbolic", target = "$XDG_CONFIG_HOME/fish/functions/dot.fish", if = "dotter.packages.git" }
"fish/functions/hx.fish" = { type = "symbolic", target = "$XDG_CONFIG_HOME/fish/functions/hx.fish", if = "dotter.packages.helix" }
"fish/functions/la.fish" = "$XDG_CONFIG_HOME/fish/functions/la.fish"
"fish/functions/ll.fish" = "$XDG_CONFIG_HOME/fish/functions/ll.fish"
"fish/functions/pacdiff.fish" = { type = "symbolic", target = "$XDG_CONFIG_HOME/fish/functions/pacdiff.fish", if = "(and dotter.packages.neovim dotter.packages.pacman)" }
"fish/functions/sshmux.fish" = { type = "symbolic", target = "$XDG_CONFIG_HOME/fish/functions/sshmux.fish", if = "dotter.packages.ssh" }
"fish/functions/vi.fish" = { type = "symbolic", target = "$XDG_CONFIG_HOME/fish/functions/vi.fish", if = "dotter.packages.neovim" }
"fish/functions/yeet.fish" = { type = "template", target = "$XDG_CONFIG_HOME/fish/functions/yeet.fish", if = "dotter.packages.pacman" }
"fish/functions/yolo.fish" = { type = "template", target = "$XDG_CONFIG_HOME/fish/functions/yolo.fish", if = "dotter.packages.pacman" }
"fish/functions/xsvp.fish" = { type = "symbolic", target = "$XDG_CONFIG_HOME/fish/functions/xsvp.fish", if = "dotter.packages.xsv" }

[games.files]
"games/local/bin/steam" = "~/.local/bin/steam"
"games/local/bin/steam-runtime" = "~/.local/bin/steam-runtime"
"games/local/share/applications/steam.desktop" = "~/.local/share/applications/steam.desktop"

[games.variables.games]
poe = { pob = false, awakened = false }
steam = { screensaver-fix = true }
wow = { curseforge = false }

[git.files]
"git/config" = "$XDG_CONFIG_HOME/git/config"
"git/ignore" = "$XDG_CONFIG_HOME/git/ignore"

[git.variables.git.core]
autocrlf = "input"

[git.variables.git.credential]
helper = "/usr/lib/git-core/git-credential-libsecret"

[git.variables.git.diff]
tool = "nvimdiff"

[git.variables.git.http]
sslbackend = ""

[git.variables.git.merge]
guitool = ""
tool = "nvimdiff"

[git.variables.git.safe]
directory = []

[helix.files]
"helix/config.toml" = "$XDG_CONFIG_HOME/helix/config.toml"
"helix/languages.toml" = "$XDG_CONFIG_HOME/helix/languages.toml"

[htop.files]
"htop/htoprc" = "$XDG_CONFIG_HOME/htop/htoprc"

[intel]

[kde.files]
"kde/dolphinrc" = "$XDG_CONFIG_HOME/dolphinrc"
"kde/gwenviewrc" = "$XDG_CONFIG_HOME/gwenviewrc"
"kde/kactivitymanagerd-statsrc" = "$XDG_CONFIG_HOME/kactivitymanagerd-statsrc"
"kde/kactivitymanagerdrc" = "$XDG_CONFIG_HOME/kactivitymanagerdrc"
"kde/kconf_updaterc" = "$XDG_CONFIG_HOME/kconf_updaterc"
"kde/kded5rc" = "$XDG_CONFIG_HOME/kded5rc"
"kde/kdedefaults/kcminputrc" = "$XDG_CONFIG_HOME/kdedefaults/kcminputrc"
"kde/kdedefaults/kdeglobals" = "$XDG_CONFIG_HOME/kdedefaults/kdeglobals"
"kde/kdedefaults/kscreenlockerrc" = "$XDG_CONFIG_HOME/kdedefaults/kscreenlockerrc"
"kde/kdedefaults/ksplashrc" = "$XDG_CONFIG_HOME/kdedefaults/ksplashrc"
"kde/kdedefaults/kwinrc" = "$XDG_CONFIG_HOME/kdedefaults/kwinrc"
"kde/kdedefaults/package" = "$XDG_CONFIG_HOME/kdedefaults/package"
"kde/kdedefaults/plasmarc" = "$XDG_CONFIG_HOME/kdedefaults/plasmarc"
"kde/kdeglobals" = "$XDG_CONFIG_HOME/kdeglobals"
"kde/kglobalshortcutsrc" = "$XDG_CONFIG_HOME/kglobalshortcutsrc"
"kde/kiorc" = "$XDG_CONFIG_HOME/kiorc"
"kde/kscreenlockerrc" = "$XDG_CONFIG_HOME/kscreenlockerrc"
"kde/kservicemenurc" = "$XDG_CONFIG_HOME/kservicemenurc"
"kde/ktimezonedrc" = "$XDG_CONFIG_HOME/ktimezonedrc"
"kde/ktrashrc" = "$XDG_CONFIG_HOME/ktrashrc"
"kde/kwinrc" = "$XDG_CONFIG_HOME/kwinrc"
"kde/kxkbrc" = "$XDG_CONFIG_HOME/kxkbrc"
"kde/mimeapps.list" = "$XDG_CONFIG_HOME/mimeapps.list"
"kde/plasma-localerc" = "$XDG_CONFIG_HOME/plasma-localerc"
"kde/plasma-org.kde.plasma.desktop-appletsrc" = "$XDG_CONFIG_HOME/plasma-org.kde.plasma.desktop-appletsrc"
"kde/plasmashellrc" = "$XDG_CONFIG_HOME/plasmashellrc"
"kde/powerdevilrc" = "$XDG_CONFIG_HOME/powerdevilrc"
"kde/powermanagementprofilesrc" = "$XDG_CONFIG_HOME/powermanagementprofilesrc"
"kde/spectaclerc" = "$XDG_CONFIG_HOME/spectaclerc"
"kde/systemmonitorrc" = "$XDG_CONFIG_HOME/systemmonitorrc"
"kde/systemsettingsrc" = "$XDG_CONFIG_HOME/systemsettingsrc"
"kde/Trolltech.conf" = "$XDG_CONFIG_HOME/Trolltech.conf"
"kde/user-dirs.dirs" = "$XDG_CONFIG_HOME/user-dirs.dirs"
"kde/user-dirs.locale" = "$XDG_CONFIG_HOME/user-dirs.locale"
"kde/xsettingsd/xsettingsd.conf" = "$XDG_CONFIG_HOME/xsettingsd/xsettingsd.conf"
#"kde/kwinoutputconfig-$HOSTNAME.json" = "$XDG_CONFIG_HOME/kwinoutputconfig.json"

[kde.variables.kde]
scale = 1
taskManagerScreen = 0

[kde.variables.kde.kwinrc.tiling]

[keepassxc.files]
"keepassxc/autostart/org.keepassxc.KeePassXC.desktop" = "$XDG_CONFIG_HOME/autostart/org.keepassxc.KeePassXC.desktop"
"keepassxc/keepassxc.ini" = "$XDG_CONFIG_HOME/keepassxc/keepassxc.ini"

[linux.variables.linux]
bluetooth = false
default-kernel = "arch"
fstrim = true
lts = false
surface = false

[msys2.files]
"msys2/etc/nsswitch.conf" = "C:/msys2/etc/nsswitch.conf"

[neovim.files]
"neovim/init.vim" = "$XDG_CONFIG_HOME/nvim/init.vim"
"neovim/mappings.vim" = "$XDG_CONFIG_HOME/nvim/mappings.vim"
"neovim/plugins.vim" = "$XDG_CONFIG_HOME/nvim/plugins.vim"
"neovim/settings.vim" = "$XDG_CONFIG_HOME/nvim/settings.vim"
"neovim/statusline.vim" = "$XDG_CONFIG_HOME/nvim/statusline.vim"
"neovim/ui.vim" = "$XDG_CONFIG_HOME/nvim/ui.vim"

[neovim-qt]
depends = ["neovim"]

[onedrive.files]
"onedrive/config" = "$XDG_CONFIG_HOME/onedrive/config"
"onedrive/sync_list" = "$XDG_CONFIG_HOME/onedrive/sync_list"

[pacman.variables]
pacman = "pacman"

[paru]
depends = ["pacman"]

[paru.variables]
paru = "paru"

[ripgrep]

[rust.variables.rust]
RUSTUP_HOME = "$XDG_DATA_HOME/rustup"
CARGO_HOME = "$XDG_DATA_HOME/cargo"

[shell.files]
"shell/dotupdate" = "~/.local/bin/dotupdate"

[shell.variables.shell]
EDITOR = "nvim"
Encoding = "UTF-8"
LESS = "-iFR -x4 --incsearch --mouse --wheel-lines=4"
Locale = "en_US"
LocalTimeZone = "US/Eastern"
PATH_PREFIX = ["$HOME/.local/bin"]
PATH_SUFFIX = []
SOURCE_HOME = "~/Source"
XDG_CACHE_HOME = "$HOME/.cache"
XDG_CONFIG_HOME = "$HOME/.config"
XDG_DATA_HOME = "$HOME/.local/share"
XDG_STATE_HOME = "$HOME/.local/state"

[signal.files]
"signal/autostart/signal-desktop.desktop" = "$XDG_CONFIG_HOME/autostart/signal-desktop.desktop"
"signal/local/share/applications/signal-desktop.desktop" = "$XDG_DATA_HOME/applications/signal-desktop.desktop"

[ssh.files]
"ssh/config" = "~/.ssh/config"

[ssh.variables.ssh]
connection-sharing = true

[sshd]
depends = ["ssh"]

[starship.files]
"starship/starship.toml" = "$XDG_CONFIG_HOME/starship.toml"

[starship.variables.starship]
command_timeout = 2000

[systemd]
depends = ["shell"]

[systemd.files]
"systemd/environment.d/envvars.conf" = "$XDG_CONFIG_HOME/environment.d/envvars.conf"

[systemd-networkd]
depends=["systemd"]

[systemd-networkd.variables.systemd-networkd]
ethernet = true
wlan = false
wwan = false

[tig]

[tmux.files]
"tmux/tmux.conf" = "$XDG_CONFIG_HOME/tmux/tmux.conf"

[tmux.variables.tmux]
default-terminal = ""

[vscode.files]
"vscode/local/bin/code" = { type = "symbolic", target = "~/.local/bin/code", if = "dotter.packages.linux" }
"vscode/local/share/applications/code.desktop" = { type = "symbolic", target = "$XDG_DATA_HOME/applications/vscode.desktop", if = "dotter.packages.linux" }

[vsvim.files]
"vsvim/vsvimrc" = "~/.vsvimrc"

[windows]
depends = ["shell"]

[windowsterminal.files]
"windowsterminal/settings.json" = "$LOCALAPPDATA/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json"

[wsl]

[wsl-client]

[xsv]
