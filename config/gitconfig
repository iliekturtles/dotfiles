[user]
	useConfigOnly = true
[includeIf "gitdir:D:/Code/"]
	path = "D:/Code/.gitconfig"
[checkout]
	defaultRemote = origin
[core]
	autocrlf = true
	commentChar = ";"
	excludesfile = ~/$XDG_CONFIG_HOME/git/ignore
	pager = delta
[commit]
	verbose = true
[credential "https://github.com"]
	username = mike.boutin@gmail.com
[delta]
	features = decorations
	line-numbers = true
	navigate = true
	tabs = 4
[delta "interactive"]
	keep-plus-minus-markers = false
[delta "decorations"]
	commit-decoration-style = yellow ol
	file-style = omit
	hunk-header-style = file syntax
	hunk-header-decoration-style = blue ul
	hunk-header-file-style = normal bold
	; minus-style = syntax auto
	; minus-emph-style = syntax auto
	; whitespace-error-style = magenta reverse
[diff]
	algorithm = histogram
	tool = vimdiff
	wsErrorHighlight = all
[fetch]
	prune = true
[interactive]
	diffFilter = delta --color-only --features=interactive
[pager]
	diff = delta
	log = delta
	reflog = delta
	show = delta
[pretty]
	changelog = format:%C(auto)%h%d %Cgreen%an %Cred(%cr) %Creset%s
[pull]
	ff = only
[push]
	default = simple
	recurseSubmodules = check
[rebase]
	autoSquash = true
[rerere]
	autoUpdate = true
	enabled = true
[submodule]
	fetchJobs = 0
[tig]
	tab-size = 4
[alias]
	ci = commit
	cia = "!git add -AN && git commit -a"
	ciaa = "!git add -AN && git commit -a --amend"
	cip = "!git add -AN && git commit -p"
	cipa = "!git add -AN && git commit -p --amend"
	co = checkout
	cop = checkout -p
	cs = "!git checkout $1 && git down ; git submodule update ; :"
	down = merge --ff-only
	drop-pr = !BRANCH=$(git rev-parse --abbrev-ref HEAD) && git checkout master && git branch -D $BRANCH && git down
	ds = diff --staged
	f = fetch
	facs = "!git fat && git checkout $1 && git down ; git submodule update ; :"
	fars = "!git fat && git checkout $1 && git reset --hard origin/$1 ; git submodule update ; :"
	fat = fetch --all --tags
	fcs = "!git ft && git checkout $1 && git down ; git submodule update ; :"
	frs = "!git ft && git checkout $1 && git reset --hard origin/$1 ; git submodule update ; :"
	ft = fetch --tags
	lag = log --all --graph --pretty=changelog --date-order
	lg = log --graph --pretty=changelog --date-order
	lp = log -p
	pr = !BRANCH=$(git rev-parse --abbrev-ref HEAD) PR_REMOTE=$(git config push.pr-remote || git config checkout.defaultRemote) && git push "${PR_REMOTE:-origin}" --force-with-lease && git checkout master && git branch -D $BRANCH && git down
	rs = "!git checkout $1 && git reset --hard origin/$1 ; git submodule update ; :"
	skipped = !git ls-files -v | grep \"^[hS]\"
	st = status -sb
	unstage = reset HEAD --
	up = pull --ff-only
	az-pull-pr = "!function urldecode() { : \"${*//+/ }\"; echo -e \"${_//%/\\\\x}\"; }; urldecode $1 | sed -E \"s/^(.+)\\?version=GB(.+)$/git switch -C \\2 origin\\/master~50 \\&\\& git pull \\1 \\2/\" | source /dev/stdin"
	az-merge-pr = "!function urldecode() { : \"${*//+/ }\"; echo -e \"${_//%/\\\\x}\"; }; urldecode $1 | sed -E \"s/^(.+\\.)([^\\/]+)\\?version=GB(.+)$/git remote add \\2 \\1\\2 \\&\\& git fetch \\2 \\3 \\&\\& git merge \\2\\/\\3 \\; git remote remove \\2/\" | source /dev/stdin"
	gh-pull-pr = "!function urldecode() { : \"${*//+/ }\"; echo -e \"${_//%/\\\\x}\"; }; urldecode $1 | sed -E \"s/^(.+)\\/tree\\/(.+)$/git switch -C \\2 origin\\/master~50 \\&\\& git pull \\1 \\2/\" | source /dev/stdin"
	gh-merge-pr = "!function urldecode() { : \"${*//+/ }\"; echo -e \"${_//%/\\\\x}\"; }; urldecode $1 | sed -E \"s/^(https:\\/\\/github.com\\/)([^\\/]+)\\/([^\\/]+)\\/tree\\/(.+)$/git remote add \\2 \\1\\2\\/\\3.git \\&\\& git fetch \\2 \\4 \\&\\& git merge \\2\\/\\4 \\; git remote remove \\2/\" | source /dev/stdin"
